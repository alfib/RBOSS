<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">


    <!-- import security config -->
    <import resource="springsecurity.xml" />
  
    
    <!-- needed for security tag lib expression support -->
    <bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" /> 

        
    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties" ref="hibernateProperties" />
        <!-- OR mapping files. -->
        <property name="annotatedClasses">
            <list>
                <value>com.mycompany.rboss.domain.User</value>            
                <value>com.mycompany.rboss.domain.Role</value>                      
                <value>com.mycompany.rboss.domain.MyOrder</value>            
                <value>com.mycompany.rboss.domain.Product</value>            
                <value>com.mycompany.rboss.domain.OrderLineItem</value>            
                <value>com.mycompany.rboss.domain.ShoppingCart</value> 
                <value>com.mycompany.rboss.domain.Address</value> 
                <value>com.mycompany.rboss.domain.CreditCard</value> 
                           
            </list>
        </property>
    </bean>

    <!-- the datasource -->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost/tes" />
        <property name="username" value="root" />
        <property name="password" value="" />
        <!--  username and password of our database should match the aboves, 
        we should use those in phpMyAdmin if we are using WAMP for example-->
    </bean>

    <!-- hibernate Properties -->
    <bean id="hibernateProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect </prop>               
                <prop key="connection.pool_size">1</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean id="txManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- look for transaction annotations -->
    <tx:annotation-driven transaction-manager="txManager" />
 
    
    <bean id="userService" class="com.mycompany.rboss.service.UserService">
        <property name="userDAO" ref="userDAO"/>
    </bean>
    
    <bean id="userDAO" class="com.mycompany.rboss.DAO.UserDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>   
  

      <bean id="productService" class="com.mycompany.rboss.service.ProductService">
        <property name="productDAO" ref="productDAO"/>
    </bean>
    
    <bean id="productDAO" class ="com.mycompany.rboss.DAO.ProductDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <bean id="orderLineItemDAO" class ="com.mycompany.rboss.DAO.OrderLineItemDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
        <bean id="orderLineItemService" class="com.mycompany.rboss.service.OrderLineItemService">
        <property name="orderlineDAO" ref="orderLineItemDAO"/>
    </bean>
    
    <bean id="orderDAO" class ="com.mycompany.rboss.DAO.OrderDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
       <bean id="orderService" class ="com.mycompany.rboss.service.OrderService">
        <property name="orderDAO" ref="orderDAO"/>
    </bean>
    
    <bean id="shoppingCartDAO" class ="com.mycompany.rboss.DAO.ShoppingCartDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
            <bean id="shoppingCartService" class="com.mycompany.rboss.service.ShoppingCartService">
        <property name="shoppingCartDAO" ref="shoppingCartDAO"/>
    </bean>
    
    <!-- grants access to the lower roles if there are any based on the role hierarchy -->
    <bean id="roleVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter">
        <constructor-arg ref="roleHierarchy" />
    </bean>
    
    
    
    <!-- for method invocation handling as well as url authorization-->
    <bean id="accessDecisionManager" 
          class="org.springframework.security.access.vote.AffirmativeBased">
        <property name="decisionVoters">
            <list>
                <ref bean="roleVoter" />
                <bean class="org.springframework.security.web.access.expression.WebExpressionVoter">
                    <property name="expressionHandler">
                        <bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
                            <property name="roleHierarchy" ref="roleHierarchy"/>
                        </bean>
                    </property>
                </bean>
                <bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
            </list>
        </property>
    </bean>
    
    <!--  Define the role hierarchy in the RoleHierarchyImpl i.e. which roles should include others  -->
    <bean id="roleHierarchy"
          class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
        <property name="hierarchy">
            <value>
                ROLE_ADMIN > ROLE_FACULTY
                ROLE_FACULTY > ROLE_CUSTOMER
            </value>
        </property>
    </bean>
    
</beans>